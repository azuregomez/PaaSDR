{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix":{
            "type": "string",
            "metadata": {
              "description": "Prefix for naming resources"
          }
    }, 
    "drRegion":{
      "type": "string",
      "metadata": {
              "description": "Azure Region for Secondary DB"
      },
      "defaultValue": "West US"
    },    
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[concat(parameters('resourceNamePrefix'),'-kv')]",            
      "metadata": {
        "description": "Name of the Vault"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Tenant Id of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API"
      }
    },
    "ADUserObjectID": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the AD user. Get using Get-AzureRmADUser or Get-AzureRmADServicePrincipal cmdlets"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "enableVaultForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the vault is enabled for a VM deployment"
      }
    },
    "enableVaultForDiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the azure platform has access to the vault for enabling disk encryption scenarios."
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },   
    "appServiceName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 20,
      "defaultValue": "[concat(parameters('resourceNamePrefix'),'Web')]"
    },
    "appServicePlanName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('resourceNamePrefix'),'-asp')]"
    },
    "appServicePlanSkuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "sourceCodeZipUrl":{
          "type": "string",
          "defaultValue": "https://storagegomez.blob.core.windows.net/public/persondemo.zip",
           "metadata": {
              "description": "The zip file of the codes."
            }
    },  
    "trafficManagerDNSName": {
      "type": "string",
      "defaultValue": "[concat(parameters('resourceNamePrefix'),'Web')]"
    },
    "sqlServerName": {
          "type": "string",
          "defaultValue":"[concat(parameters('resourceNamePrefix'),'-sqlserver')]",
          "metadata": {
            "description": "sql server name."
          }
    },
    "sqlServerSecondaryName":{
         "type": "string",
          "defaultValue":"[concat(parameters('resourceNamePrefix'),'-sqlserver-dr')]",
          "metadata": {
            "description": "secondary sql server name."
          }
    },
    "sqlFailoverGroupName":{
         "type": "string",
          "defaultValue":"[concat(parameters('resourceNamePrefix'),'-sqlfog')]",
          "metadata": {
            "description": "sql server failover group name."
          }
    },
    "sqlAdministratorLogin": {
          "type": "string",
          "defaultValue": "azureadmin",
          "metadata": {
              "description": "Username for SQL Admin."
          }
    },
    "sqlAdministratorPassword": {
            "type": "securestring",
            "defaultValue": "p@ssw0rd1!",
            "metadata": {
            "description": "Password for the SQL."
            }
    },
    "sqlDatabaseName": {
          "type": "string",
          "defaultValue":"[concat(parameters('resourceNamePrefix'),'sql')]",
          "metadata": {
            "description": "sql server db name."
          }
    },
    "sqldatabaseBacpacUrl":{
          "type": "string",
          "defaultValue": "https://storagegomez.blob.core.windows.net/public/sports.bacpac",
          "metadata": {
            "description": "sql server bacpac location"
          }
    }     
  },
  "resources": [
    {
      "comments": "***** Key Vault *****",
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2016-10-01",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
        "enabledForDiskEncryption": "[parameters('enableVaultForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('ADUserObjectID')]",
            "permissions": {
              "keys": ["all"],
              "secrets": ["all"]
            }
          }
        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"
        }
      }
    }, 
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/dbcnstr')]",
      "apiVersion": "2015-06-01",
       "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "contentType": "text/plain",
        "value": "[concat('Server=tcp:',parameters('sqlFailoverGroupName'),'.database.windows.net,1433;Initial Catalog=', parameters('sqldatabaseName'), ';Persist Security Info=False;User ID=',parameters('sqlAdministratorLogin'),';Password=',parameters('sqlAdministratorPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
      }     
    },
    {
      "comments": "***** App Service Plan *****",
      "name": "[parameters('appServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "sku": {
        "name": "[parameters('appServicePlanSkuName')]"
      },
      "dependsOn": [ ],
      "tags": {
        "displayName": "appServicePlan"
      },
      "properties": {
        "name": "[parameters('appServicePlanName')]",
        "numberOfWorkers": 1
      }
    },
    {
      "comments": "***** App Service Web Site  *****",
      "name": "[parameters('appServiceName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      } ,
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')))]": "Resource",
        "displayName": "webApp"
      },
      "properties": {
        "name": "[parameters('appServiceName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      },
      "resources": [
         {
              "apiVersion": "2015-08-01",
              "name": "MSDeploy",
              "type": "extensions",                           
              "dependsOn": [
                 "[resourceId('Microsoft.Web/Sites', parameters('appServiceName'))]"                 
              ],
              "properties": {
                "packageUri": "[parameters('sourceCodeZipUrl')]"
              }
          }
      ]
    },
    {
      "comments": "***** Traffic Manager  *****",
      "apiVersion": "2015-11-01",
      "type": "Microsoft.Network/trafficManagerProfiles",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
      ],
      "name": "[parameters('trafficManagerDNSName')]",
      "location": "global",
      "properties": {
        "profileStatus": "Enabled",
        "trafficRoutingMethod": "Priority",
        "dnsConfig": {
          "relativeName": "[parameters('trafficManagerDNSName')]",
          "ttl": 30
        },
        "monitorConfig": {
          "protocol": "HTTP",
          "port": 80,
          "path": "/"
        },
        "endpoints": [
          {
            "name": "[concat(parameters('trafficManagerDNSName'),'Endpoint')]",
            "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties": {
              "targetResourceId": "[resourceId('Microsoft.Web/sites/', concat(parameters('appServiceName')))]",
              "endpointStatus": "Enabled"
            }
          }
        ]
      }
    },
    {
      "comments": "Primary SQL Server",
      "name": "[parameters('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",           
      "apiVersion": "2015-05-01-preview",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "comments": "Primary SQL Server > Firewall Rules",
          "type": "firewallRules",
          "name": "AllowAllAzureIps",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[parameters('sqlserverName')]"
          ],
          "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "0.0.0.0"
          }
        },
        {
          "comments": "Primary SQL Server > database",
          "name": "[parameters('sqldatabaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[parameters('sqlserverName')]"
          ],
          "properties": {
            "edition": "Basic",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "Basic"
          },
          "resources": [
            {
                "comments": "Primary SQL Server > database > Extensions",
                "name": "Import",
                "type": "extensions",
                "apiVersion": "2014-04-01",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlserverName'), parameters('sqldatabaseName'))]"
                ],
                "properties": {
                    "storageKeyType": "SharedAccessKey",
                    "storageKey": "?",
                    "storageUri": "[parameters('sqldatabaseBacpacUrl')]",
                    "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                    "administratorLoginPassword": "[parameters('sqlAdministratorPassword')]",
                    "operationMode": "Import"
                }
            }
          ]
        },
        {
          "comments": "Primary SQL Server > failoverGroup",
          "apiVersion": "2015-05-01-preview",
          "type": "failoverGroups",
          "name": "[parameters('sqlFailoverGroupName')]",
          "properties": {
            "serverName": "[parameters('sqlserverName')]",
            "partnerServers": [
              {
                "id": "[resourceId('Microsoft.Sql/servers/', parameters('sqlServerSecondaryName'))]"
              }
            ],
            "readWriteEndpoint": {
              "failoverPolicy": "Automatic",
              "failoverWithDataLossGracePeriodMinutes": 60
            },
            "readOnlyEndpoint": {
              "failoverPolicy": "Disabled"
            },
            "databases": [
              "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlserverName'), parameters('sqldatabaseName'))]"
            ]
          },
          "dependsOn": [
            "[parameters('sqlserverName')]",
            "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlserverName'), parameters('sqlDatabaseName'))]",
            "[resourceId('Microsoft.Sql/servers', parameters('sqlServerSecondaryName'))]"
          ]
        }       
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "kind": "v12.0",
      "name": "[parameters('sqlServerSecondaryName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('drRegion')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorPassword')]",
        "version": "12.0"
      }
    }
  ]
}